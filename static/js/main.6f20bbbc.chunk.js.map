{"version":3,"sources":["ChannelRow.js","SearchPage.js","SidebarRow.js","Sidebar.js","RecomendedVideos.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["ChannelRow","image","channel","verified","subs","noOfVideos","description","className","Avatar","alt","src","SearchPage","SidebarRow","Icon","title","Sidebar","HomeIcon","WhatshotIcon","Subscription","VidLibIcon","HistoryIcon","OnDemandVidIcon","WatchLaterIcon","RecomendedVideos","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6f20bbbc.chunk.js","sourcesContent":["import React from 'react'\r\nimport './searchPage.css'\r\nimport './chanellRow.css'\r\nimport Circletick from \"@material-ui/icons/CheckCircleOutlineOutlined\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nfunction ChannelRow({\r\n    image,\r\n    channel,\r\n    verified,\r\n    subs,\r\n    noOfVideos,\r\n    description\r\n}\r\n            \r\n) {\r\n    return (\r\n        <div className=\"chanellRow\">\r\n            <Avatar className=\"channelRow_logo\"\r\n            alt={channel}\r\n            src={image}/>\r\n            <div className=\"channelRow_text\">\r\n\r\n            <h4>{channel}{verified && <Circletick/>}</h4>\r\n            <p>{subs} subscribers . {noOfVideos} videos</p>\r\n            <p>{description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelRow\r\n","import React from 'react'\r\nimport \"./searchPage.css\"\r\nimport './chanellRow.css'\r\nimport ChannelRow from \"./ChannelRow\"\r\nimport TuneOutlinedIcon from \"@material-ui/icons/TuneOutlined\"\r\nfunction SearchPage() {\r\n    return (\r\n        <div className=\"searchPage\">\r\n            <div className=\"searchpage_filter\">\r\n            <TuneOutlinedIcon/>\r\n            <h2>Filter</h2>\r\n            </div>\r\n            <hr/>\r\n            <ChannelRow\r\n            image=\"ryan.jpg\"\r\n            channel=\"RTJ BEATZ\"\r\n            verified\r\n            subs= \"799K\"\r\n            noOfVideos={400}\r\n            description=\"Learn to make beats now\"\r\n            \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react'\r\nimport \"./sidebar.css\"\r\n\r\nfunction SidebarRow({Icon, title}) {\r\n    return (\r\n        <div className=\"sidebarRow\">\r\n            <Icon className=\"sidebarRow_icon\"/>\r\n            <h2 className=\"sidebarRow_title\">{ title }</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarRow\r\n","import React from 'react'\r\nimport \"./sidebar.css\"\r\nimport SidebarRow from \"./SidebarRow\"\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\r\nimport Subscription from \"@material-ui/icons/Subscriptions\";\r\nimport VidLibIcon from \"@material-ui/icons/VideoLibrary\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport OnDemandVidIcon from \"@material-ui/icons/OndemandVideo\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <SidebarRow Icon={HomeIcon} title=\"Home\"/>\r\n            <SidebarRow Icon={WhatshotIcon} title=\"Trending\"/>\r\n            <SidebarRow Icon={Subscription} title=\"Subscriptions\"/>\r\n            <hr/>\r\n            <SidebarRow Icon={VidLibIcon} title=\"Library\"/>\r\n            <SidebarRow Icon={HistoryIcon} title=\"History\"/>\r\n            <SidebarRow Icon={OnDemandVidIcon} title=\"Your Videos\"/>\r\n            <SidebarRow Icon={WatchLaterIcon} title=\"Watch Later\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport \"./recVidz.css\"\r\nimport VideoCard from \"./VideoCard\"\r\n\r\nfunction RecomendedVideos() {\r\n    return (\r\n        <div className=\"rec_vids\">\r\n            <h2>Recomended</h2>\r\n            <div className=\"rec_vidz_vidz\">\r\n                <VideoCard\r\n                title=\"How to make a banger beat in 10 minutes\"\r\n                views=\"2.3M\"\r\n                timestamp=\"4 days ago\"\r\n                channelImage=\"BI.png\"\r\n                channel=\"RTJ BEATZ\"\r\n                image=\"BI.png\"/>\r\n\r\n                <VideoCard\r\n                title=\"How to make a banger beat in 10 minutes\"\r\n                views=\"2.3M\"\r\n                timestamp=\"4 days ago\"\r\n                channelImage=\"BLACK FRIDAY.jpg\"\r\n                channel=\"RTJ BEATZ\"\r\n                image=\"BLACK FRIDAY.jpg\"/>\r\n\r\n                <VideoCard\r\n                title=\"How to make a Pop beat in 20 minutes\"\r\n                views=\"2.3M\"\r\n                timestamp=\"4 days ago\"\r\n                channelImage=\"ryan.jpg\"\r\n                channel=\"RTJ BEATZ\"\r\n                image=\"ryan.jpg\"/>\r\n\r\n                <VideoCard\r\n                title=\"How to make a regea beat \"\r\n                views=\"2.3M\"\r\n                timestamp=\"4 days ago\"\r\n                channelImage=\"CONTACT.jpg\"\r\n                channel=\"RTJ BEATZ\"\r\n                image=\"CONTACT.jpg\"/>\r\n\r\n                <VideoCard\r\n                title=\"How to make a banger beat in 10 minutes\"\r\n                views=\"2.3M\"\r\n                timestamp=\"4 days ago\"\r\n                channelImage=\"BLACK FRIDAY.jpg\"\r\n                channel=\"RTJ BEATZ\"\r\n                image=\"BLACK FRIDAY.jpg\"/>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecomendedVideos\r\n","import Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport RecomendedVideos from \"./RecomendedVideos\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* <Header /> */}\n        <Switch>\n          <Route path=\"/search\">\n            <div className=\"app_page\">\n              <Sidebar />\n              <SearchPage />\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <div className=\"app_page\">\n              <Sidebar />\n              {/* <RecomendedVideos/> */}\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}